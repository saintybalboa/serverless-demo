name: API Manual Deployment Workflow

on:
  workflow_dispatch:
    inputs:
      commit-hash:
        description: 'Enter the commit hash or branch'
        required: true
        default: 'main'
      domain:
        description: 'Enter the domain name'
        required: true
        default: 'api.msswebdevelopment.com'
      hosted-zone-id:
        description: 'Enter the HostedZoneId'
        required: true
      repo:
        description: 'Github repository that contains the API source code'
        required: true
        default: 'saintybalboa/aws-api-gateway-demo'

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set NPM Auth Token
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: echo "//npm.pkg.github.com/:_authToken=${NPM_AUTH_TOKEN}" > .npmrc
      - name: Install dependencies
        run: |
          npm i -g serverless
          npm i
      - name: Checkout the API repository
        uses: actions/checkout@v2
        with:
          path: api/${{ github.event.inputs.repo }}
          repository: ${{ github.event.inputs.repo }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          ref: ${{ github.event.inputs.commit-hash }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Certificate check
        working-directory: ''
        run: |
          HOSTED_ZONE_ID=${{ github.event.inputs.hosted-zone-id }} \
          DOMAIN=${{ github.event.inputs.domain }} \
          REPO=${{ github.event.inputs.repo }} \
          make create-cert
      - name: Deploy
        working-directory: api
        run: |
          DOMAIN=${{ github.event.inputs.domain }} \
          REPO=${{ github.event.inputs.repo }} \
          make deploy
